name: Kotlin SDK

on:
  workflow_call:
    inputs:
      name:
        description: The name of the project
        required: true
        type: string
    secrets:
      GPR_USER:
        description: A username with write access to Github Package registry.
        required: true
      GPR_KEY:
        description: A PAT with write access to Github Package registry.
        required: true
      SLACK_NOTIFICATION_WEBHOOK_URL:
        description: A Slack webhook where workflow failures will be published to.
        required: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      is-release: ${{ steps.metadata.outputs.is-release }}
      publishable: ${{ steps.metadata.outputs.publishable }}
      version: ${{ steps.metadata.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup asdf-vm
        uses: equisoft-actions/with-asdf-vm@v2

      - name: Find application metadata
        id: metadata
        uses: equisoft-actions/application-metadata@v1

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup asdf-vm
        uses: equisoft-actions/with-asdf-vm@v2

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Compile source and test code
        shell: bash
        run: |
          ./gradlew assemble \
            -Papplication.version=${{ needs.setup.outputs.version }} \
            -Pgpr.user=${{ secrets.GPR_USER }} \
            -Pgpr.key=${{ secrets.GPR_KEY }}

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        if: ${{ success() }}
        with:
          name: ${{ inputs.name }}-${{ needs.setup.outputs.version }}.jar
          path: build/libs/${{ inputs.name }}-${{ needs.setup.outputs.version }}.jar
          retention-days: 5
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: ${{ needs.setup.outputs.publishable == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.name }}-${{ needs.setup.outputs.version }}.jar
          path: build/libs/${{ inputs.name }}-${{ needs.setup.outputs.version }}.jar

      - name: Setup asdf-vm
        uses: equisoft-actions/with-asdf-vm@v2

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Publish
        shell: bash
        run: |
          ./gradlew publish \
              -Papplication.version=${{ needs.setup.outputs.version }} \
              -Pgpr.user=${{ secrets.GPR_USER }} \
              -Pgpr.key=${{ secrets.GPR_KEY }}

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [setup, build, publish]
    if: failure() && needs.setup.outputs.publishable == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find workflow status
        id: workflow
        shell: bash
        run: |
          STATUS=success
          if [[ "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
            STATUS=cancelled
          elif [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            STATUS=failure
          fi

          echo "status=$STATUS" >> "$GITHUB_OUTPUT"

      - name: Post workflow status
        uses: equisoft-actions/notify-workflow-status@v1
        with:
          slack-webhook-url: ${{ secrets.SLACK_NOTIFICATION_WEBHOOK_URL }}
          workflow-status: ${{ steps.workflow.outputs.status }}
